
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
Error in system("/sbin/ping -c 1 khaleesi", intern = TRUE, ignore.stderr = TRUE) : 
  error in running command
> 
> rsids <- subset(tbl.eQTL, pvalue < 0.001)$rsid
> length(rsids)  # 17
[1] 17
> 
> 
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> 
> motifs.selected <- query(MotifDb, "sapiens", c("jaspar2018", "hocomoco-core-A"))
> 
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = BiocParallel::bpparam(),
+                        verbose=TRUE)
reached end of SNPs list length = 25 with 5591 potentially disruptive matches to 460 of 537 motifs.
> 
> save(results, file=sprintf("ptk2b.eqtls.%d.motifbreaks.RData"))
Error in sprintf("ptk2b.eqtls.%d.motifbreaks.RData") : too few arguments
Calls: save -> sprintf
Execution halted

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
Error in system("/sbin/ping -c 1 khaleesi", intern = TRUE, ignore.stderr = TRUE) : 
  error in running command
> tbl.oi <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.oi$pvalue, decreasing=FALSE)
> tbl.oi <- tbl.oi[new.order,]
> head(tbl.oi)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.oi)
[1] 5590   10
> 
> selected <- sort(sample(seq_len(nrow(tbl.oi)), size=100))
> 
> tbl.oi.small <- tbl.oi[selected,]
> dim(tbl.oi.small)
[1] 100  10
> rsids <- unique(tbl.oi.small$rsid)
> 
> 
> #rsids <- subset(tbl.eQTL, pvalue < 0.001)$rsid
> length(rsids)  # 17
[1] 100
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- query(MotifDb, "sapiens", c("jaspar2018", "hocomoco-core-A"))
> 
> param <- SnowParam(workers = 40, type = "SOCK")
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = param,
+                        verbose=TRUE)
reached end of SNPs list length = 120 with 26131 potentially disruptive matches to 460 of 537 motifs.
> 
> printf("----- breakR complete")
[1] ----- breakR complete
> 
> save(results, file=sprintf("ptk2b.eqtls.%d.motifbreaks.RData", length(rsids)))
> 
> 
> 
> 
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> rsids <- head(tbl.eQTL$rsid, n=20)
> subset(tbl.eQTL, rsid %in% rsids)
      chrom     hg19     hg38        rsid      pvalue            ensg genesymbol      study tissue   assay
215    chr8 26577021 26719504  rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738   chr8 27505957 27648440  rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602    chr8 26551397 26693880  rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536    chr8 27767066 27909549  rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537    chr8 27767231 27909714  rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095   chr8 27764576 27907059   rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2795   chr8 27767276 27909759  rs58646328 0.003273450 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1561   chr8 27769367 27911850  rs28588017 0.003322103 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2761   chr8 27771707 27914190  rs57755501 0.003465972 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2959   chr8 27762021 27904504  rs62496800 0.003659214 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
380    chr8 26541519 26684002 rs150033119 0.003778593 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3548   chr8 26292753 26435237  rs73219814 0.004301373 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3938   chr8 26294434 26436918  rs76970204 0.004370161 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
892    chr8 26571605 26714088   rs2028554 0.004583541 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
16046  chr8 26581168 26723651  rs10866853 0.005461442 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
15643  chr8 26579782 26722265   rs1000987 0.005483287 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
16466  chr8 26537428 26679911  rs11990945 0.005486306 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
451    chr8 26555484 26697967  rs17055715 0.006182482 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3738   chr8 26554960 26697443  rs73554163 0.006188589 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2858   chr8 26557329 26699812  rs60565850 0.006188634 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> 
> length(rsids)  # 17
[1] 20
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> length(snps.gr)
[1] 22
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids), 40)
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam()
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 22 with 674 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 674  24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 486  24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
  rs1000987  rs10866853  rs11990945  rs13278281 rs150033119  rs17055715  rs17058204  rs17058207  rs17330796   rs2028554  rs28588017  rs34547896  rs57755501  rs58646328  rs60565850  rs62496800  rs73219814  rs73554163 
         36          26          16          25          20          25          24          19          16          25          15          33          28          21          22          22          36          40 
 rs76970204   rs7826640 
         26          11 
> save(results, tbl.breaks, tbl.summary, file=sprintf("ptk2b.eqtls.%d.motifbreaks.RData", length(rsids)))
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> length(rsids.all)
[1] 5590
> rsids <- tail(rsids, n=100)
Error in h(simpleError(msg, call)) : 
  error in evaluating the argument 'x' in selecting a method for function 'tail': object 'rsids' not found
Calls: tail -> .handleSimpleError -> h
Execution halted

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> length(rsids.all)
[1] 5590
> rsids <- tail(rsids.all, n=100)
> 
> # rsids <- tbl.eQTL$rsid[
> #subset(tbl.eQTL, rsid %in% rsids)
> 
> length(rsids)  # 17
[1] 100
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> length(snps.gr)
[1] 128
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids), 40)
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam()
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 128 with 3858 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 3858   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 2798   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10098125  rs10100812  rs10102677  rs10107497  rs10110905  rs10481329  rs11135954  rs11135963  rs11135965 rs117300211  rs11998303  rs12541165  rs12547456  rs12549537  rs12549968  rs13282907   rs1348823   rs1541875 
         60          39          35          24          39          16          35          25          23          26          20          12          22          45          30          21          17          23 
  rs1583092   rs1584233  rs17055695  rs17059034  rs17401856   rs1838877    rs184488   rs1867889   rs1879181   rs1879182   rs1879183   rs1879184   rs1879185   rs1879186   rs1896959   rs2034037   rs2163176   rs2218568 
         17          18          21          32          32          27          29          67          43          20          19          42          21          46          19          23          48          26 
  rs2233699   rs2241657   rs2241658   rs2280375   rs2288617   rs2292976   rs2322588  rs28699433  rs28850893    rs327235    rs327236    rs327237    rs328095  rs34405107   rs3735758   rs3736523   rs3779636   rs4416829 
         32          56          56          22          21          25          46          19          20          20          16          25          27          13          24          36          42          45 
  rs4448225   rs4496924   rs4518678   rs4545046   rs4732830   rs4733064    rs515096  rs55638236  rs56280243  rs56409411  rs57585352  rs60216971  rs60431181  rs61008596  rs61386345  rs61660457   rs6557983   rs6557984 
         48          29          21          47          30          17          22          34          27          15          34          19          23          22          24          20          33          62 
  rs6557985   rs6993153   rs6996922   rs7003027   rs7017268  rs71517899  rs73224163   rs7341664    rs735880  rs73678611  rs74373662  rs74600765    rs748282  rs75809697  rs77185818   rs7819220   rs7821500   rs7824151 
         25          34          22          14          36          26          17          14          27          13          23          21          54          15          29           6          36          20 
  rs7830851   rs7834850   rs7843897  rs80110910    rs867230    rs891393    rs904054    rs919493    rs920695    rs920696 
         26           9          17          25          18          35          22          30          20          30 
> save(results, tbl.breaks, tbl.summary, file=sprintf("ptk2b.eqtls.%d.motifbreaks.RData", length(rsids)))
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count))
Error: unexpected ')' in:
"if(direction == "bottom")
  rsids <- tail(rsids.all, n=count))"
Execution halted

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- sort(sample(seq_len(length(rsids)), size=count))
> 
> # rsids <- tbl.eQTL$rsid[
> #subset(tbl.eQTL, rsid %in% rsids)
> 
> length(rsids)  # 17
[1] 200
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> length(snps.gr)
[1] 242
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids), 40)
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam()
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 242 with 7470 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 7470   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 5443   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
  rs1000987  rs10088139  rs10088835  rs10091985  rs10103507  rs10106004  rs10107750  rs10110509   rs1019832  rs10216964   rs1036814     rs10495  rs10503785  rs10503786  rs10503788  rs10503789  rs10503790  rs10503791 
         36          22          21          26          37          20          47          20          50          16          17          33          27          16          13          20          35          24 
 rs10503794  rs10503827  rs10780141  rs10780143  rs10866853  rs11135934  rs11135936 rs112374193 rs113623975 rs115353197 rs117226090  rs11774417  rs11774576  rs11775994 rs117775110  rs11782673  rs11782789  rs11783299 
         17          19          39          21          26          16          14          34          20          39          28          53          44          29          24          26          30          13 
 rs11784168     rs11863  rs11990945  rs11993701  rs12546118  rs12546828  rs12680267  rs13249662  rs13257111  rs13268059  rs13271910  rs13274641  rs13277175  rs13278281  rs13279020  rs13281659   rs1345134   rs1381114 
         18          13          16          28          12          19          27          16          26          32          14          27          31          25          27          21          32          21 
rs141813851   rs1442894   rs1442895   rs1446682   rs1465942 rs150033119   rs1542185   rs1561817    rs167855  rs17055205  rs17055715  rs17058204  rs17058207  rs17058252  rs17247110  rs17247198  rs17260378  rs17309571 
         22          24          35          20          25          20          24          28          34          20          25          24          19          22          16          19          27          24 
 rs17310140  rs17321828  rs17330796  rs17376459  rs17414182  rs17445042   rs1982441   rs1982442   rs2028554   rs2043434   rs2046222   rs2164027   rs2241656   rs2278319    rs227982    rs227983   rs2322057   rs2322718 
         26          19          16          27          61          20          23           5          25          38          29          25          14          29          25          43          22          37 
  rs2585453   rs2614053   rs2685379   rs2727010  rs28588017    rs327216    rs327217    rs328110  rs34137228  rs34382665  rs34470465  rs34547896  rs35019551  rs35152624  rs35491396  rs36046209   rs3736524   rs3757907 
         20          27          22          22          15          16          13          40          23          83          21          33          27          32          22          19          54          24 
  rs3779635   rs3808585   rs4338109   rs4472469   rs4496925   rs4577966   rs4732626   rs4732785   rs4732788   rs4732813   rs4732970   rs4733044   rs4733058    rs485609    rs503508    rs512941    rs518732    rs527340 
         13          43          26          44          42           3          16          19          71          18          24          55          16          30          17          40          26          39 
   rs555300  rs56128468  rs56183746  rs56223946  rs56285565    rs565664  rs57755501  rs58646328  rs60344760  rs60565850  rs62496800   rs6557912   rs6557918   rs6557933   rs6557939   rs6558023  rs66641045  rs67728756 
         25          17          26          24          17          17          28          21          24          22          22          47          28          60          36          23          19          47 
 rs68156407   rs6981287   rs6987195   rs6991152   rs6996739   rs6997944   rs6999359   rs7000280   rs7005443  rs72477506    rs725787  rs73217737  rs73217800  rs73219814  rs73219821  rs73219822  rs73219838  rs73225321 
         27          36          34          24          22          13          12          31          19          18          23          21          25          36          21          27          72          47 
 rs73226800  rs73227604  rs73227652  rs73227691  rs73228813  rs73239429    rs733078  rs73554163  rs73554189     rs75320    rs753509  rs76863263  rs76970204   rs7814218   rs7815494   rs7818301   rs7819249   rs7819607 
          7          32          27          32          19          22          17          40          52          25          18          24          26          40          34          27          54          30 
  rs7826640   rs7828733   rs7840424   rs7840494   rs7842128   rs7845740  rs78875955    rs871185    rs871186    rs875164    rs878910    rs891394   rs9314326    rs939717   rs9644114   rs9644117   rs9644118   rs9644119 
         11          23          63          20          41          58          24          18          14          30          16          27          26          31          11          19          59          32 
  rs9692850   rs9692866 
         17          22 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.motifbreaks.RData", direction, count)
> save(results, tbl.breaks, tbl.summary, file=filename)
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> direction <- "random"
> # direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- sort(sample(seq_len(length(rsids)), size=count))
Error in h(simpleError(msg, call)) : 
  error in evaluating the argument 'x' in selecting a method for function 'sort': object 'rsids' not found
Calls: sort -> sample -> .handleSimpleError -> h
Execution halted

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> direction <- "random"
> # direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- rsids[sort(sample(seq_len(length(rsids)), size=count))]
Error: object 'rsids' not found
Execution halted

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> direction <- "random"
> # direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- rsids.all[sort(sample(seq_len(length(rsids)), size=count))]
Error in h(simpleError(msg, call)) : 
  error in evaluating the argument 'x' in selecting a method for function 'sort': object 'rsids' not found
Calls: sort -> sample -> .handleSimpleError -> h
Execution halted

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> direction <- "random"
> # direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> 
> # rsids <- tbl.eQTL$rsid[
> #subset(tbl.eQTL, rsid %in% rsids)
> 
> length(rsids)  # 17
[1] 200
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> length(snps.gr)
[1] 249
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids), 40)
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam()
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 249 with 7750 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 7750   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 5652   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10081527  rs10089637  rs10094146  rs10098125  rs10098242  rs10104456  rs10104837  rs10111053  rs10111096  rs10503785  rs10780143  rs11135939  rs11135991 rs111361261  rs11774579  rs11775008  rs11775507  rs11775555 
         25          25          20          60          58          28          22          25          15          27          21          46          21          16          27          18          29          30 
 rs11776693 rs117775110  rs11777639  rs11778421  rs11780471  rs11784045  rs11784982  rs11787104  rs11990945  rs11998303  rs12334678  rs12543619  rs12547456  rs12548086  rs12548468  rs12675832  rs12678500  rs12679650 
         20          24          23          55          26          16          37          27          16          20          27          52          22          45          34          24          15          21 
 rs13252640  rs13255712  rs13257637  rs13261052  rs13263030  rs13271596  rs13272944  rs13273039  rs13273685  rs13275416  rs13277332   rs1345134   rs1380679   rs1390511   rs1429938 rs147311641   rs1563940   rs1594830 
         31          25          18          16          18          10          42          17          29          19          27          32          21          11          14          45          26          51 
 rs17055186  rs17055865  rs17056297  rs17057043  rs17057288  rs17058386  rs17058502  rs17422864  rs17423653  rs17434005   rs1825139    rs184488   rs1899495   rs1908653   rs2055195   rs2163175   rs2218566   rs2241652 
         30          27          21          17          58           8          25          28          18          27          46          29          25          23          32          22          26          22 
   rs227983   rs2280932   rs2289592   rs2291635   rs2303882   rs2322715   rs2472553   rs2565059   rs2570644   rs2614057   rs2614082   rs2614094   rs2614098   rs2614099   rs2640724   rs2685303   rs2685333   rs2685335 
         43          38          31          56          22          24          46          13          28          18          36          18          23          25          28          41          39          66 
  rs2685416   rs2722938   rs2722941   rs2726948   rs2726985  rs28587761  rs28641618  rs28791896   rs2980255    rs327228  rs34109053  rs34151191  rs34342547  rs35917363    rs364508   rs3735745   rs3735758   rs3779622 
         21          28          15          31          15          60          31          27          15          42          19          45          32          27          17          41          24          29 
  rs3808576    rs390323   rs4149255   rs4297048   rs4323431   rs4418350   rs4487777   rs4496925   rs4545046    rs472707   rs4732603   rs4732606   rs4732620   rs4732629   rs4732719   rs4732786   rs4732788   rs4732810 
         46          51          18          30          82          27          27          42          47          37          19          31          27          24          17          33          71          21 
  rs4732846   rs4733052    rs483831    rs485609   rs4872434   rs4872440   rs4872453   rs4872457    rs499046   rs5000732    rs511662    rs522315    rs548561  rs55962000  rs56024323    rs566398  rs59005825  rs60326178 
         23          20          19          30          27          28          36          42          20          25          28          58          21          22          35          12          19          24 
 rs60535405  rs61757000  rs62491907  rs62496760  rs62498000  rs62502067  rs62503697   rs6420160   rs6557946   rs6557968   rs6558061  rs66483220  rs66505272  rs67370850  rs68012375  rs68012435  rs68098015   rs6981822 
         45          18          23          23          38          24          17          22          31          27          17          16          26           7          24          27          16          35 
  rs6986328   rs6994580   rs7004613   rs7005504   rs7007164   rs7009144   rs7012480   rs7017268  rs71504472  rs71519619  rs73231065  rs73237477  rs73239429  rs73568968  rs73676401  rs73679981   rs7459991   rs7463901 
         22          30          53          22          27          22          37          36          29          33          26          23          22          47          25          11          17          14 
   rs747111    rs753509  rs76230997  rs76303070   rs7815214   rs7817068   rs7825593   rs7832632   rs7834553   rs7835006   rs7839294   rs7840424   rs7846097  rs80033897  rs80039403    rs884829    rs920697    rs956152 
         18          18          27          13          11          30          16          19          13          34          45          63          20          21          17          21          22          14 
  rs9657273   rs9692676 
         46          46 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.motifbreaks.RData", direction, count)
> save(results, tbl.breaks, tbl.summary, file=filename)
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> direction <- "random"
> # direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> 
> # rsids <- tbl.eQTL$rsid[
> #subset(tbl.eQTL, rsid %in% rsids)
> 
> length(rsids)  # 17
[1] 200
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> length(snps.gr)
[1] 255
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids), 40)
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam()
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 255 with 7878 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 7878   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 5610   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10089254  rs10089512  rs10089637  rs10090204  rs10097793  rs10097861  rs10103021  rs10105298  rs10106782  rs10282967   rs1060412  rs10866869 rs111319633  rs11135955  rs11135956  rs11136012  rs11136035  rs11136041 
         27          39          25          21          41          26          24          25          25          25          24          55          37          28          45          15          30          14 
rs111473411 rs111602822   rs1128433 rs113287798   rs1157690 rs117189538  rs11775158  rs11775519  rs11775520  rs11775958  rs11779035  rs11779435  rs11783717  rs11787077     rs11863  rs11993944  rs12543895  rs12545925 
          7          30          36          35          22          23          36          39          25          64          23          24          23          18          13          15          16          49 
 rs12547465  rs12547771  rs12550616  rs12675832  rs12677955  rs12679874  rs12681592   rs1320092  rs13252640  rs13253946  rs13254138  rs13257637  rs13263030  rs13263198  rs13263201  rs13282253  rs13438899   rs1345134 
         54          23          17          24          30          24          26          55          31          27          43          18          18          13          38          12          18          32 
  rs1350801   rs1390511   rs1446684   rs1493520   rs1541875   rs1565736  rs17333700  rs17411738  rs17438203  rs17478040 rs180852202   rs1871807   rs1879181   rs1967390   rs1982229   rs1996395   rs2004361   rs2015443 
         19          11          43          24          23          19          33          20          26          24          13          21          43          11           7          22          23          58 
  rs2028554   rs2034039   rs2036108   rs2043434   rs2046222   rs2100365   rs2163175   rs2272693   rs2322398   rs2322603   rs2582367   rs2614046   rs2614105   rs2614117   rs2623463   rs2645719   rs2685303   rs2685340 
         25          29          51          38          29          21          22          37          15          40          25          26          51          29          20          18          41          23 
  rs2685348   rs2726958   rs2741339  rs28372101  rs28470992  rs28525995  rs28526186  rs28840432    rs328086  rs34082400  rs34762662  rs34765233    rs351773  rs35386738  rs35483145  rs35594839  rs35661586  rs35944480 
         23          23          24          62          17          26          33          29          44          11          21          20          22          19          39          23          15          32 
  rs3735731   rs3736523   rs3808580    rs401975   rs4082584   rs4149252   rs4149255   rs4266606   rs4355729   rs4388413   rs4510811   rs4554424   rs4732618   rs4732632   rs4732762   rs4732765   rs4732796   rs4733021 
         18          36          31          51          15          13          18          46          26          19          22           7          54          26          31          19          21          50 
  rs4733023    rs477060    rs498917    rs507374    rs509475    rs511662    rs520769  rs56377863  rs57152558    rs576748  rs57755501  rs58153210  rs58235899  rs60047958  rs60510630  rs61678000  rs62492718  rs62496818 
         21          19          25          24          27          28          24          27          24           7          28          62          25          66          22          24          26          37 
 rs62500888  rs62502378  rs62504161  rs62504281   rs6557941   rs6557974   rs6557991  rs66505272   rs6651399  rs66971911    rs693832   rs6981224   rs6986495   rs6988355   rs6994778   rs6995233   rs7000364   rs7005183 
          9          56          14          25          27          41          32          26          12          53          42          22          22          23          18          37          22          16 
  rs7005954   rs7006248   rs7013745   rs7016131  rs71504472  rs73219839  rs73229674  rs73237449  rs73241407  rs73568976  rs75116243  rs75793727  rs76295526  rs76391545  rs76424723   rs7817265   rs7820957   rs7823504 
         18          19          52          52          29          25          18          19          56          52          28          12          30          20          30          16          26          25 
  rs7824574   rs7828682   rs7830522   rs7832752   rs7832778   rs7835006   rs7837129   rs7838259   rs7841405  rs79399984  rs79555030  rs79663912  rs80076351    rs900075   rs9314334    rs937352    rs939715    rs961334 
         23          16          22          38          29          34          25          25          18          14          25          20          62          16          42          69          20          22 
  rs9657293   rs9692866 
         35          22 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.motifbreaks.RData", direction, count)
> save(results, tbl.breaks, tbl.summary, file=filename)
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> direction <- "random"
> # direction <- "top"
> 
> count <- 200
> 
> if(direction == "top")
+   rsids <- head(rsids.all, n=count)
> if(direction == "bottom")
+   rsids <- tail(rsids.all, n=count)
> if(direction == "random")
+   rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> 
> # rsids <- tbl.eQTL$rsid[
> #subset(tbl.eQTL, rsid %in% rsids)
> 
> length(rsids)  # 17
[1] 200
> 
> 
> printf("----- get snps")
[1] ----- get snps
> snps.gr <- snps.from.rsid(rsid=rsids,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> length(snps.gr)
[1] 239
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids), 40)
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam()
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> count <- 40
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- sample(head(rsids.all, n=rich.pvals.end), size=40)
> length(rsids.oi)  # 17
[1] 40
> 
> snps.gr <- snps.from.rsid(rsid=rsids.oi,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 49
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 49 with 1491 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 1491   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 1070   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10106004  rs10107750  rs10503789  rs10780143  rs11135936 rs115353197  rs11783299  rs11784168  rs12546828  rs13257111  rs13279020  rs13281659   rs1345134   rs1442895   rs1446682 rs150033119   rs1542185    rs167855 
         20          47          20          21          14          39          13          18          19          26          27          21          32          35          20          20          24          34 
 rs17058204  rs17058207  rs17445042   rs1982441   rs2046222   rs2614053  rs34547896  rs35491396  rs36046209   rs3757907   rs4338109   rs4732813  rs62496800  rs66641045   rs6987195   rs6991152   rs7005443  rs73219814 
         24          19          20          23          29          27          33          22          19          24          26          18          22          19          34          24          19          36 
 rs73219838  rs73554189   rs7842128   rs9692850 
         72          52          41          17 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> count <- 40
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- sample(head(rsids.all, n=rich.pvals.end), size=40)
> length(rsids.oi)  # 17
[1] 40
> 
> snps.gr <- snps.from.rsid(rsid=rsids.oi,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 50
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 50 with 1535 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 1535   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 1128   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10088835  rs10107750  rs10503794 rs117226090  rs11774576 rs117775110  rs11782673  rs11782789  rs11784168  rs11990945  rs11993701  rs13257111  rs13278281   rs1345134   rs1442895   rs1446682   rs1465942  rs17321828 
         21          47          17          28          44          24          26          30          18          16          28          26          25          32          35          20          25          19 
 rs17376459   rs1982441   rs2028554    rs227982   rs2614053    rs327216  rs34382665   rs4577966   rs4733058    rs518732   rs6557912   rs6558023  rs67728756   rs6999359   rs7005443    rs725787     rs75320   rs7819249 
         27          23          25          25          27          16          83           3          16          26          47          23          47          12          19          23          25          54 
  rs7840424   rs7840494   rs9314326   rs9692850 
         63          20          26          17 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> count <- 40
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- sample(head(rsids.all, n=rich.pvals.end), size=40)
> length(rsids.oi)  # 17
[1] 40
> 
> snps.gr <- snps.from.rsid(rsid=rsids.oi,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 47
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 47 with 1479 potentially disruptive matches to 50 of 80 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 1479   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 1078   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
  rs1000987  rs10088835  rs10106004   rs1036814  rs10503790 rs117226090  rs11782789     rs11863  rs11990945  rs13257111   rs1442894  rs17055715  rs17058207  rs17414182   rs2046222   rs2322057   rs2585453    rs327216 
         36          21          20          17          35          28          30          13          16          26          24          25          19          61          29          22          20          16 
   rs327217  rs34137228  rs35491396  rs36046209   rs4733044   rs4733058    rs555300  rs57755501   rs6558023  rs68156407  rs73227604  rs73227691  rs73554163  rs73554189     rs75320  rs76970204   rs7818301   rs7826640 
         13          23          22          19          55          16          25          28          23          27          32          32          40          52          25          26          27          11 
  rs7845740    rs875164   rs9644117   rs9692850 
         58          30          19          17 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> count <- 40
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- sample(head(rsids.all, n=rich.pvals.end), size=40)
> length(rsids.oi)  # 17
[1] 40
> 
> snps.gr <- snps.from.rsid(rsid=rsids.oi,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 49
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 49 with 1392 potentially disruptive matches to 50 of 80 motifs.
>  tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 1392   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 988  24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10088835   rs1036814  rs10503788  rs10503827 rs112374193  rs11990945  rs11993701  rs12546828  rs12680267  rs13278281 rs141813851   rs1446682   rs1542185   rs1561817    rs167855  rs17055715  rs17058252  rs17321828 
         21          17          13          19          34          16          28          19          27          25          22          20          24          28          34          25          22          19 
  rs1982441   rs2046222   rs2614053   rs4338109   rs4577966   rs4732813    rs512941    rs565664  rs60565850   rs6557939  rs66641045   rs6981287   rs6999359   rs7000280    rs725787  rs73226800  rs73227691     rs75320 
         23          29          27          26           3          18          40          17          22          36          19          36          12          31          23           7          32          25 
  rs7819249   rs7826640   rs7845740   rs9314326 
         54          11          58          26 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "top"
> count <- 40
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- sample(head(rsids.all, n=rich.pvals.end), size=40)
> rsids.sig <- subset(tbl.eQTL, pvalue <= 0.01)$rsid
> length(rsids.sig)  # 45
[1] 45
> length(rsids.oi)  # 17
[1] 40
> 
> #snps.gr <- snps.from.rsid(rsid=rsids.oi,
> snps.gr <- snps.from.rsid(rsid=rsids.sig,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 52
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- 40 #min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 52 with 1616 potentially disruptive matches to 50 of 80 motifs.
>  tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 1616   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 1191   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
  rs1000987  rs10088139  rs10088835  rs10091985  rs10103507  rs10503788  rs10503789  rs10503790  rs10503791  rs10503794  rs10866853  rs11774576  rs11783299  rs11990945  rs13278281 rs150033119  rs17055715  rs17058204 
         36          22          21          26          37          13          20          35          24          17          26          44          13          16          25          20          25          24 
 rs17058207  rs17058252  rs17330796   rs2028554  rs28588017  rs34547896  rs57755501  rs58646328  rs60565850  rs62496800   rs6557939   rs7000280   rs7005443  rs73219814  rs73227691  rs73554163  rs73554189  rs76970204 
         19          22          16          25          15          33          28          21          22          22          36          31          19          36          32          40          52          26 
  rs7818301   rs7819249   rs7826640   rs7840424    rs871185    rs871186   rs9314326   rs9692850   rs9692866 
         27          54          11          63          18          14          26          17          22 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "middle"
> #direction <- "top"
> count <- 40
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- sample(head(rsids.all, n=rich.pvals.end), size=40)
> rsids.sig <- subset(tbl.eQTL, pvalue <= 0.01)$rsid
> length(rsids.sig)  # 45
[1] 45
> length(rsids.oi)  # 17
[1] 40
> 
> rsids.midsig <- subset(tbl.eQTL, pvalue <= 0.55 & pvalue >= 0.50)$rsid
> length(rsids.midsig)
[1] 213
> rsids.midsig <- sample(rsids.midsig, size=40)
> 
> #snps.gr <- snps.from.rsid(rsid=rsids.oi,
> #snps.gr <- snps.from.rsid(rsid=rsids.sig,
> snps.gr <- snps.from.rsid(rsid=rsids.midsig,
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 50
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- 40 #min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 50 with 1472 potentially disruptive matches to 50 of 80 motifs.
>  tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 1472   24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 1021   24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs11136024 rs112754919 rs117733039  rs11780034  rs11780834  rs11781866  rs13252640  rs13282363   rs1389343  rs17057065   rs1842648   rs1979330   rs2053537   rs2279591   rs2322315  rs28372101  rs35767880  rs35889509 
         10          31          40          16          17          16          31          18          23          11          13          11          28          21          52          62          19          17 
   rs368563   rs3808580    rs401975   rs4272333   rs4732619   rs4872452    rs553014  rs60094041  rs60776649  rs62491924  rs62502074  rs66480522   rs6981737   rs6982403   rs6989655   rs7006900  rs75904882  rs76460713 
         18          31          51          16          21          67          22          29          14          17          40           6          43          20          25          26          24          21 
  rs7816609   rs7817506   rs7842497  rs79555030 
         27          29          13          25 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> 
> 
> #direction <- "bottom"
> #direction <- "random"
> direction <- "middle"
> #direction <- "top"
> 
> 
> rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> rsids.oi <- rsids.all[1000:2000]
> rsids.sig <- subset(tbl.eQTL, pvalue <= 0.01)$rsid
> length(rsids.sig)  # 45
[1] 45
> length(rsids.oi)  # 17
[1] 1001
> count <- length(rsids.oi)
> 
> 
> rsids.midsig <- subset(tbl.eQTL, pvalue <= 0.55 & pvalue >= 0.50)$rsid
> length(rsids.midsig)
[1] 213
> rsids.midsig <- sample(rsids.midsig, size=40)
> 
> #snps.gr <- snps.from.rsid(rsid=rsids.oi,
> #snps.gr <- snps.from.rsid(rsid=rsids.sig,
> snps.gr <- snps.from.rsid(rsid=rsids.oi, 
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- get snps")
[1] ----- get snps
> length(snps.gr)
[1] 1223
> printf("----- get motifs")
[1] ----- get motifs
> 
> motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> 
> worker.count <- 40 #min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 1223 with 37919 potentially disruptive matches to 50 of 80 motifs.
>  tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 37919    24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 27439    24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10081527  rs10086428  rs10086525  rs10086699  rs10086852  rs10087085  rs10087558  rs10088957  rs10089281  rs10090618  rs10090917  rs10090925  rs10090926  rs10091671  rs10092146  rs10093047  rs10093756  rs10093956 
         25          15          39          18          33          21          23          21          21          28          29          23          34          25          27          25          63          46 
 rs10094055  rs10094227  rs10094584  rs10094695  rs10095051  rs10095750  rs10095765  rs10095873  rs10097446  rs10097519  rs10097793  rs10097952  rs10098558  rs10098588  rs10098679  rs10098733  rs10098820  rs10098910 
         22          45          37          23          28          25          26          16          63          22          41          23          17          17          43          15          37          27 
 rs10099154  rs10099539  rs10099964  rs10100206  rs10100417  rs10100815  rs10100835  rs10100844  rs10101072  rs10101429  rs10101512  rs10102309  rs10102339  rs10103021  rs10103303  rs10103504  rs10103758  rs10104025 
         20          46          23          40          21          24          22          35          29          26          21          27          17          24          24          27          13          21 
 rs10105019  rs10105420  rs10105735  rs10106782  rs10107325  rs10107664  rs10108333  rs10108650  rs10108812  rs10109159  rs10109782  rs10110224  rs10111804  rs10112313  rs10112803  rs10113357  rs10113580  rs10113621 
         33          18          23          25          28          49          28          19          39          30          28          42          21          37          29          31          16          36 
 rs10113817  rs10216551  rs10216623   rs1025858   rs1025860   rs1036706   rs1036707   rs1036708   rs1036813  rs10503797  rs10503815  rs10503816  rs10503817  rs10503820  rs10503821   rs1052874   rs1055741   rs1073742 
         23          18          28          25          22          11          19          26          37          26          20          54          30          12          22          40          29          14 
  rs1073743   rs1079078  rs10866850  rs10866865  rs10866866  rs10866867  rs10866869 rs111285193  rs11135938  rs11135970  rs11135998  rs11136007  rs11136028  rs11136031  rs11136033  rs11136035  rs11136036  rs11136041 
         48          22          67          51          16          35          55          27          20          17          19          25          26          11          29          30          22          14 
rs111500026 rs111576315 rs111673499 rs111809414 rs111967372 rs112120708 rs112537296 rs112641566 rs112678603 rs113175060 rs113908215 rs114608910 rs117140578 rs117384411 rs117738841  rs11774208  rs11774529  rs11775008 
         15          23          36          30          39          49          48          22          42          24          27          28          23          20          22          12           9          18 
 rs11775497  rs11775683  rs11775967  rs11775980  rs11776426  rs11776801  rs11778040  rs11778371  rs11778421  rs11778465  rs11778890  rs11779435  rs11779546  rs11779927  rs11780026  rs11780124  rs11780316  rs11780653 
         17          22          38          24          63          13          19          20          55          44          34          24          27          14          14          28          31          19 
 rs11781198  rs11782190  rs11782813  rs11782869  rs11783207  rs11783776  rs11783810  rs11784203  rs11784877  rs11784951  rs11785606  rs11785877  rs11786004  rs11787360 rs118073710  rs11984508  rs11988774  rs11990271 
         25          35          35          27          27          22          22          21          19          16          21          32          23          29          47          28          65          40 
 rs11991342  rs11992166  rs11994255  rs11994515  rs11994699  rs12234932  rs12334989  rs12335307  rs12386854  rs12541748  rs12543689  rs12544240  rs12544946  rs12547465  rs12548074  rs12548086  rs12548106  rs12548838 
         45          50          17          27          23          23          22          24          26          22          30          30          42          54          27          45          30          26 
 rs12675119  rs12676087  rs12676560  rs12676581  rs12677603  rs12677981  rs12677999  rs12678211  rs12678418  rs12678426  rs12679863  rs12680303  rs12682017  rs12682237  rs12682238  rs12682354   rs1320379  rs13248070 
         20          34           8          37          20          17          27          22          25          28          23          18          23          19          19          27          16          76 
 rs13249152  rs13249561  rs13249892  rs13250007  rs13251551  rs13251987  rs13252433  rs13252703  rs13253111  rs13253529  rs13254276  rs13255966  rs13256192  rs13257309  rs13257953  rs13259358  rs13259826  rs13260473 
         24          51          29          21          14          32          19          19          29          41          36          23          16          25          17          27          17          25 
 rs13261052  rs13261758  rs13262360  rs13262475  rs13262766  rs13263201  rs13263369  rs13263902  rs13264773  rs13265219  rs13265329  rs13266949  rs13268221  rs13268769  rs13269331  rs13269915  rs13270601  rs13273492 
         16          32          57          29          20          38          15          19          19          20           9          56          24          39          17          24          21          26 
 rs13273607  rs13273652  rs13273685  rs13274396  rs13279787  rs13280942  rs13281095  rs13281802  rs13282446  rs13282722   rs1345135   rs1348821   rs1374381   rs1377337   rs1377338   rs1380678   rs1381113 rs140790540 
         35          36          29          23          15          27          25          23          29          48          25          49          48          19          31          61          33          18 
rs141804347   rs1429938 rs143939197   rs1442336   rs1446676   rs1446684 rs144916389   rs1460224   rs1460225   rs1460226   rs1460227   rs1460228 rs147520111   rs1481654   rs1493520   rs1493521   rs1542470   rs1551720 
         24          14          54          60          28          43          14          24          20          44          37          22          16          28          24          30          35          20 
  rs1563055   rs1565735  rs17055163  rs17055516  rs17055582  rs17055767  rs17055954  rs17055962  rs17055965  rs17056076  rs17056818  rs17057406  rs17057520  rs17057523  rs17057611  rs17057810  rs17057834  rs17057845 
         36          19          16          23          66          22          71          27          31          20          23          23          19          10          22          27          20          39 
 rs17057863  rs17057870  rs17057888  rs17057911  rs17057923  rs17057925  rs17057929  rs17057935  rs17058047  rs17058684  rs17058685  rs17349353  rs17365935  rs17366372  rs17367059  rs17383366  rs17383414  rs17384485 
         26          27          15          22          28          19          28          26          18          24          16          32          24          23          39          21          31          40 
 rs17385236  rs17387099  rs17388536  rs17392666  rs17403126  rs17411738  rs17411752  rs17422864  rs17423653  rs17426996  rs17427072  rs17434005  rs17445469  rs17445483  rs17445539  rs17477326  rs17477565  rs17478178 
         15          10          31          21          27          20          14          28          18          34          28          27          19          18          25          58          56          47 
 rs17481318  rs17485069  rs17485781  rs17486592  rs17487788  rs17502474   rs1808869   rs1826548    rs182748   rs1841311   rs1841315   rs1865304   rs1867883   rs1867887   rs1870587   rs1899497   rs1982228   rs1992358 
         23          29          12          21          33          16          24           9          20          28          48          32          49          23          21          42          31          23 
  rs1992359   rs1992472   rs1996394   rs2008190   rs2015443   rs2043435   rs2045028   rs2045694   rs2046186   rs2046223   rs2083739   rs2085765   rs2085766   rs2085767   rs2121403   rs2125916   rs2132449   rs2166536 
         21          23          47          26          58          13          22          21          25          23          26          30          51          17          19          30          30           9 
  rs2173143   rs2197180   rs2218566   rs2246847   rs2272689   rs2272690   rs2272693   rs2290371   rs2291776   rs2305451   rs2305452   rs2305455   rs2305456   rs2322130   rs2322399   rs2322975   rs2565045   rs2565055 
         23          29          26          18           6           3          37          30          18          32          22          25          28          53          19          29          23          21 
  rs2565059   rs2570640   rs2582367   rs2582369   rs2582370   rs2585459   rs2614068   rs2614069   rs2614070   rs2614071   rs2614072   rs2614074   rs2614075   rs2614076   rs2614077   rs2614078   rs2614079   rs2614082 
         13          25          25          26          14          30          42          18          21          21          27          13          30          29          18          28          26          36 
  rs2614087   rs2640721   rs2640722   rs2640725   rs2640730   rs2640731   rs2640734   rs2644627   rs2685322   rs2685330   rs2685332   rs2685333   rs2685334   rs2685335   rs2685336   rs2685337   rs2685355   rs2685369 
         33          29          17          18          24          26          27          46          21          57          29          39          36          66          45          17          52          18 
  rs2685388   rs2685413   rs2722893   rs2722909   rs2722928   rs2722929   rs2722947   rs2726929   rs2726931   rs2726948   rs2726983   rs2726987   rs2727002   rs2727005   rs2727009   rs2741336   rs2741337   rs2741338 
         31          19          31          25          30          20          33          16          33          31          25          35          21          18          25          26          21          19 
  rs2741339   rs2741343  rs28372312  rs28372344  rs28402198  rs28405176  rs28414599  rs28424213  rs28429501  rs28432295  rs28447465  rs28460356  rs28472511  rs28490190  rs28507502  rs28521224  rs28525493  rs28532916 
         24          13          14          29          17          47          22          31          27          26          46          30          22          44          23          19          21          19 
 rs28535491  rs28538877  rs28541694  rs28542584  rs28544265  rs28547390  rs28550337  rs28555186  rs28556779  rs28571229  rs28587761   rs2859667  rs28613345  rs28613382  rs28641618  rs28647574  rs28655184  rs28658238 
         22          23          31          27           8          29          10          24          26          22          60          22          28          24          31          19          26          28 
 rs28670981  rs28688682  rs28690101  rs28692838  rs28729334  rs28734488   rs2874670   rs2874781  rs28754813  rs28769639  rs28775403  rs28791896  rs28792073  rs28806190  rs28816383  rs28829002  rs28830906  rs28867673 
         22          28          19          29          26          18          25          35          17          47          43          27          17          20          32          21          48          33 
 rs28879508  rs28881202   rs2926827   rs3101353   rs3101354   rs3103908   rs3109783    rs327233    rs327234    rs328102    rs328103    rs328109  rs34150396  rs34159790  rs34181358  rs34214051  rs34247390  rs34303150 
         17          31          31          37          18          18          21          24          14          29          28          27          19          20          62          11          86          17 
 rs34457877  rs34460067  rs34472023  rs34494102  rs34511075  rs34703349  rs34753393  rs34762662  rs34907015  rs35012723  rs35152482    rs351779  rs35219984  rs35221601  rs35225682  rs35258862  rs35386717  rs35493625 
         23          30          39          21          19          22          82          21          15          44          15          29          18          35          26          24          22          15 
 rs35581080  rs35594839  rs35627965  rs35717375  rs35737697  rs35746264  rs35800053  rs35857051  rs35974958   rs3735745   rs3735746   rs3757892    rs376954   rs3779619   rs3779620   rs3808365   rs3808564   rs3808577 
         39          23          19          14          28          32          44          47          22          41          55          21          42          16          26          42          33          30 
   rs384908    rs385351    rs398008    rs404735   rs4075555  rs41418848    rs415524   rs4236676    rs429591   rs4319045   rs4344087   rs4383927   rs4403364    rs442103   rs4425718   rs4425759    rs448872    rs451164 
         24          40          26          53          27          23          34          14          25          49          24          20          20          17          20          59          32          18 
  rs4515501   rs4518677    rs452787   rs4537259   rs4538825   rs4540370   rs4540371   rs4541856   rs4545107   rs4554424   rs4576430   rs4593489   rs4623360   rs4623440   rs4624985   rs4629817    rs471491    rs472707 
         71          39          38          32          18          34          19          16          27           7          23          27          17          18          21          20          20          37 
   rs473024   rs4732598   rs4732601   rs4732603   rs4732604   rs4732605   rs4732606   rs4732632   rs4732640    rs473266   rs4732720   rs4732724   rs4732734   rs4732735   rs4732743   rs4732744   rs4732748   rs4732753 
         20          21          42          19          24          52          31          26          18          21          51          45          23          48          73          13          16          22 
  rs4732755   rs4732756   rs4732757   rs4732758   rs4732759   rs4732760   rs4732761   rs4732762   rs4732763   rs4732765   rs4732771   rs4732778   rs4732780   rs4732783   rs4732798   rs4732799   rs4732800   rs4732801 
         13          16          34          23          40          21          31          31          18          19          29          51          16          50          27          13          21          31 
  rs4732816   rs4732820   rs4732822   rs4732840   rs4732843   rs4732846   rs4732854   rs4732957   rs4732958   rs4732992   rs4732999   rs4733003   rs4733035    rs477490    rs478045    rs482078    rs483392    rs484377 
         30          21          20          11          23          23          18          43          40          65          30          16          30          27          15          17          16          17 
   rs484458    rs485902    rs486354   rs4871973   rs4871977   rs4872426    rs495152    rs503224    rs504038    rs508032    rs508782    rs512130    rs514194    rs517293    rs518317    rs519238    rs520186    rs520192 
         23          28          27          61          15          27          30          26          31          10          20          28          64          29          42          26          17          45 
   rs521426    rs522069    rs525436    rs525765    rs526409    rs526693    rs528257    rs530324    rs531205    rs536220    rs536291    rs536332    rs538179    rs538181    rs538898    rs539571    rs544104    rs545111 
         41          22          17          13          17          59          13          13          19          21          44          20          29          34          17          29          25          15 
   rs548561    rs549371    rs552473    rs552536    rs553004    rs553290    rs553809    rs554876    rs556623  rs55663317    rs557234  rs55727940  rs55780663  rs55837792  rs55962000  rs55986679  rs55988242    rs559920 
         21          19          20          20          27          11          22          22          34          21          29          23          22          24          22          23          26          37 
   rs561690  rs56180997  rs56272626  rs56298508  rs56309224  rs56322485  rs56352546    rs568610  rs56914373    rs570164    rs570197    rs573514    rs575282    rs576256    rs576415    rs576956    rs577731    rs578306 
         17          31          37          47          21          64          17          23          25          19          20          33          15          25          28          15           5          21 
 rs58055988  rs58235899  rs58276416  rs58570635  rs58810643  rs58990143  rs59339059  rs59526448  rs59744548  rs60056423  rs60377146  rs60535405  rs60799361  rs60853535  rs61678000  rs61759703  rs61759706  rs61759739 
         23          25          26          26          31          23          20          15          66          38          37          45          25          19          24          19          37          21 
 rs61761841  rs61761852  rs62491001  rs62492166  rs62492167  rs62492214  rs62492215  rs62492225  rs62492226  rs62492230  rs62492234  rs62492235  rs62492717  rs62493443  rs62493444  rs62493447  rs62494668  rs62496819 
         24          19          45          33          26          21          27          22          18          18          31          22          24          27          25          22          32          41 
 rs62497991  rs62497996  rs62500888   rs6557916   rs6557927   rs6557929   rs6557930   rs6557931   rs6557932   rs6557956   rs6557970   rs6557971   rs6558008   rs6558013   rs6558017   rs6558021   rs6558022   rs6558057 
         38          24           9           7          38          21          19          24          33          28          26          11          24          40          17          37          10          23 
 rs66483220  rs66603144  rs66969288  rs67158751  rs67219109  rs67379162  rs67406938  rs67595467  rs67835152  rs67837877  rs67986404  rs67998678  rs68019818  rs68098015  rs68155784  rs68177798   rs6982177   rs6983356 
         16          45          25          29          19          20          32          34          16          23          19          13          28          16          21          25          70          12 
  rs6984310   rs6985069   rs6985482   rs6985931   rs6986988   rs6987111   rs6987142   rs6987991   rs6988187   rs6988355   rs6989156   rs6989497   rs6990074   rs6990700   rs6991508   rs6991862   rs6992095   rs6992249 
         22          27          43          26          30          19          43          24          51          23          12          26          16          51          19          26          16          27 
  rs6992864   rs6993037   rs6995071   rs6997246   rs6997643   rs6999364   rs7003052   rs7003359   rs7003622   rs7004714   rs7005743   rs7009648   rs7011131   rs7011506   rs7018017  rs71519619  rs71519654  rs71519657 
         30          17          17          26          49          25          51          61          36          30           8          25          26          28          12          33          11          24 
 rs71519658    rs721619  rs72478903    rs725361  rs72609972  rs72609973  rs72609974  rs72609975  rs72609976  rs72609978  rs72609979  rs72609980  rs72609981  rs72609982  rs72609983  rs72609984  rs72609985  rs72609986 
         59          33          33          14          34          22          22          22          24          31          18          16          13          31          42          24          24          33 
 rs72609987  rs72609988  rs72609989  rs72609990  rs73219816  rs73219825  rs73219839  rs73227362  rs73228824  rs73229087  rs73229617  rs73229627  rs73231540  rs73231578  rs73235338  rs73235354  rs73235388  rs73237395 
         19          39          34          12          18          12          25          20          28          68          31          23          21          11          26           4          22          54 
 rs73237442  rs73237445  rs73237450  rs73237453  rs73237461  rs73237463  rs73237479  rs73237480  rs73237486  rs73237491  rs73237493  rs73237495  rs73239408  rs73239409  rs73239410  rs73239413  rs73239415  rs73239416 
         26          25          26          23          18          27          35          26          25          27          25          21          15          20          24          28          28          11 
 rs73239417  rs73239418  rs73239437  rs73239459  rs73239465  rs73239472  rs73239473  rs73239475  rs73239476  rs73239477  rs73239479  rs73239481  rs73239483  rs73239484  rs73239486  rs73241407  rs73564038  rs73566682 
         27          37          34          12          19          14          33           9          26          40          25          13          18          15          25          56          48          21 
 rs73566693  rs73569910  rs73572581   rs7357500  rs73679980  rs73679981   rs7386953   rs7387426   rs7459975   rs7462871  rs74694407    rs747111  rs74713884  rs74968424  rs75046963  rs75647529  rs76228964  rs76315399 
         14          23          18          34          21          11          36          12          85          35          21          18          49          27          16          22          26          27 
 rs76338481  rs76424723  rs76698235  rs76802184  rs76804731  rs76934250  rs77769035  rs77810217  rs77919776  rs77963899    rs779951    rs779955    rs779956  rs78086099  rs78097851  rs78107043   rs7812347   rs7813629 
         31          30          31          15          18          18          12          23          21          17          22          27          45          27          16          18          16          24 
  rs7814968   rs7815080   rs7815217   rs7816586   rs7818141   rs7818172   rs7818193   rs7820310   rs7820855   rs7820957   rs7821479   rs7821827   rs7823365   rs7823486   rs7823504   rs7825085   rs7825468   rs7827602 
         43          14          31          33          18          29          18          29          19          26          30           4          23          42          25          18          44          55 
  rs7828682   rs7829031   rs7829531   rs7829720   rs7830529   rs7831121   rs7831609   rs7831693   rs7832234   rs7833278   rs7834160   rs7834325   rs7834392   rs7835006   rs7835416   rs7835853   rs7841469   rs7842666 
         16          41          19          20          20          52          34          20          22          16          16          39          28          34          39          25          31          33 
  rs7842672   rs7843809   rs7844484   rs7844716   rs7844965  rs78676691  rs78780001  rs78935527  rs78960159  rs79145239  rs79347712  rs79833674  rs79980128  rs80013714  rs80076351    rs867231    rs867232    rs870819 
         35          20          18          19          16          14          24          14          22          22          21          12          22           7          62          28          29          34 
   rs871579    rs880991    rs891398    rs898471   rs9314324   rs9314327   rs9314328   rs9314331   rs9314335   rs9314336   rs9314354   rs9314355   rs9331888   rs9331905   rs9331916   rs9331928   rs9331930   rs9331931 
         26          24          14          30          43          33          46          26          29          37          16          12          20          12          33          66          30          27 
   rs935408   rs9644137   rs9644138   rs9650403   rs9650423   rs9650424   rs9650425   rs9657272   rs9694042   rs9773606      rs9797 
         27          32          14          26          49          17          98          31          35          29          17 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(motifbreakR)
Loading required package: grid
Loading required package: MotifDb
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors
Loading required package: stats4

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomicRanges
Loading required package: GenomeInfoDb
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:grid’:

    pattern

The following object is masked from ‘package:base’:

    strsplit

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> print(load("ptk2b.eqtls.top.14.07Sep.0640.motifbreaks.RData"))
[1] "results"     "tbl.breaks"  "tbl.summary"
> 
> x <- system.time(
+ results.pval <- calculatePvalue(results)
+ )
> print(x)
     user    system   elapsed 
41246.497  1269.209 42517.431 
> save(results.pval, file="results.top14.pval.RData")
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> dim(subset(tbl.eQTL, pvalue < 0.005)) 
[1] 14 10
> tbl.eQTL[1:5,]
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> subset(tbl.eQTL, pvalue < 0.005)
     chrom     hg19     hg38        rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504  rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440  rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880  rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549  rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714  rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059   rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2795  chr8 27767276 27909759  rs58646328 0.003273450 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1561  chr8 27769367 27911850  rs28588017 0.003322103 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2761  chr8 27771707 27914190  rs57755501 0.003465972 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2959  chr8 27762021 27904504  rs62496800 0.003659214 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
380   chr8 26541519 26684002 rs150033119 0.003778593 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3548  chr8 26292753 26435237  rs73219814 0.004301373 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3938  chr8 26294434 26436918  rs76970204 0.004370161 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
892   chr8 26571605 26714088   rs2028554 0.004583541 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> 
> #direction <- "bottom"
> #direction <- "random"
> #direction <- "middle"
> direction <- "top"
> 
> #rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> #rsids.oi <- rsids.all[1000:2000]
> pval.threshold <- 0.005
> rsids.oi <- subset(tbl.eQTL, pvalue <= pval.threshold)$rsid
> length(rsids.oi)  # 5
[1] 14
> #rsids.oi <- tbl.eQTL$rsid[1:3]
> count <- length(rsids.oi)
> printf("found %d rsids at current pval threshold: %f", count, pval.threshold)
[1] found 14 rsids at current pval threshold: 0.005000
> 
> 
> 
> #rsids.midsig <- subset(tbl.eQTL, pvalue <= 0.55 & pvalue >= 0.50)$rsid
> #length(rsids.midsig)
> #rsids.midsig <- sample(rsids.midsig, size=40)
> 
> #snps.gr <- snps.from.rsid(rsid=rsids.oi,
> #snps.gr <- snps.from.rsid(rsid=rsids.sig,
> printf("--- getting snps")
[1] --- getting snps
> print(head(rsids.oi))
[1] "rs13278281" "rs34547896" "rs17330796" "rs17058204" "rs17058207" "rs7826640" 
> snps.gr <- snps.from.rsid(rsid=rsids.oi, 
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- got snps: %d", length(snps.gr))
[1] ----- got snps: 15
> length(snps.gr)
[1] 15
> printf("----- get motifs")
[1] ----- get motifs
> 
> #motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> motifs.selected <- get(load("motifs.38tfs.60motifs.pkt2b.RData"))
> length(motifs.selected)
[1] 60
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 14
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 15 with 347 potentially disruptive matches to 38 of 60 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 347  24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 239  24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs13278281 rs150033119  rs17058204  rs17058207  rs17330796   rs2028554  rs28588017  rs34547896  rs57755501  rs58646328  rs62496800  rs73219814  rs76970204   rs7826640 
         18          17          20          12          11          17          12          24          26          14          16          22          20          10 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> dim(subset(tbl.eQTL, pvalue < 0.005)) 
[1] 14 10
> tbl.eQTL[1:5,]
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> subset(tbl.eQTL, pvalue < 0.005)
     chrom     hg19     hg38        rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504  rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440  rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880  rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549  rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714  rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059   rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2795  chr8 27767276 27909759  rs58646328 0.003273450 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1561  chr8 27769367 27911850  rs28588017 0.003322103 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2761  chr8 27771707 27914190  rs57755501 0.003465972 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2959  chr8 27762021 27904504  rs62496800 0.003659214 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
380   chr8 26541519 26684002 rs150033119 0.003778593 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3548  chr8 26292753 26435237  rs73219814 0.004301373 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3938  chr8 26294434 26436918  rs76970204 0.004370161 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
892   chr8 26571605 26714088   rs2028554 0.004583541 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> 
> #direction <- "bottom"
> #direction <- "random"
> #direction <- "middle"
> direction <- "top"
> 
> #rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> #rsids.oi <- rsids.all[1000:2000]
> pval.threshold <- 0.005
> rsids.oi <- subset(tbl.eQTL, pvalue <= pval.threshold)$rsid
> length(rsids.oi)  # 5
[1] 14
> #rsids.oi <- tbl.eQTL$rsid[1:3]
> count <- length(rsids.oi)
> printf("found %d rsids at current pval threshold: %f", count, pval.threshold)
[1] found 14 rsids at current pval threshold: 0.005000
> 
> 
> 
> #rsids.midsig <- subset(tbl.eQTL, pvalue <= 0.55 & pvalue >= 0.50)$rsid
> #length(rsids.midsig)
> #rsids.midsig <- sample(rsids.midsig, size=40)
> 
> #snps.gr <- snps.from.rsid(rsid=rsids.oi,
> #snps.gr <- snps.from.rsid(rsid=rsids.sig,
> printf("--- getting snps")
[1] --- getting snps
> print(head(rsids.oi))
[1] "rs13278281" "rs34547896" "rs17330796" "rs17058204" "rs17058207" "rs7826640" 
> snps.gr <- snps.from.rsid(rsid=rsids.oi, 
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
> 
> printf("----- got snps: %d", length(snps.gr))
[1] ----- got snps: 15
> length(snps.gr)
[1] 15
> printf("----- get motifs")
[1] ----- get motifs
> 
> #motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> #motifs.selected <- get(load("motifs.38tfs.60motifs.pkt2b.RData"))
> motifs.selected <- get(load("motifs.2tfs.3motifs.pkt2b.RData"))
> 
> length(motifs.selected)
[1] 3
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 14
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 15 with 20 potentially disruptive matches to 2 of 3 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 20 24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 10 24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
rs13278281 rs17058204 rs17058207 rs17330796  rs2028554 rs28588017 rs57755501 rs58646328 rs73219814 rs76970204 
         1          1          1          1          1          1          1          1          1          1 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 

R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(EndophenotypeExplorer)
Loading required package: R6
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomeInfoDb

See system.file("LICENSE", package="MotifDb") for use restrictions.
Warning messages:
1: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadLoc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadLoc’ when loading ‘EndophenotypeExplorer’ 
2: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsidsToGRanges’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsidsToGRanges’ when loading ‘EndophenotypeExplorer’ 
3: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2loc’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2loc’ when loading ‘EndophenotypeExplorer’ 
4: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::rsid2alleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::rsid2alleles’ when loading ‘EndophenotypeExplorer’ 
5: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::COMPATIBLE_BSGENOMES’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::COMPATIBLE_BSGENOMES’ when loading ‘EndophenotypeExplorer’ 
6: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPcount’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPcount’ when loading ‘EndophenotypeExplorer’ 
7: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::.loadAlleles’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::.loadAlleles’ when loading ‘EndophenotypeExplorer’ 
8: replacing previous import ‘SNPlocs.Hsapiens.dbSNP144.GRCh37::getSNPlocs’ by ‘SNPlocs.Hsapiens.dbSNP151.GRCh38::getSNPlocs’ when loading ‘EndophenotypeExplorer’ 
> library(SNPlocs.Hsapiens.dbSNP151.GRCh38)
Loading required package: BSgenome
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

Loading required package: rtracklayer
> library(BSgenome.Hsapiens.UCSC.hg38)
> library(motifbreakR)
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:Biostrings’:

    pattern

Loading required package: MotifDb
Warning message:
replacing previous import ‘S4Vectors::as.data.frame’ by ‘motifStack::as.data.frame’ when loading ‘motifbreakR’ 
> library(MotifDb)
> library(BiocParallel)
> 
> etx <- EndophenotypeExplorer$new("PTK2B", "hg38");
> tbl.eQTL <- etx$getEQTLsForGene()
> tbl.eQTL  <- subset(tbl.eQTL, study=="ampad-mayo" & tissue=="tcx")
> new.order <- order(tbl.eQTL$pvalue, decreasing=FALSE)
> tbl.eQTL <- tbl.eQTL[new.order,]
> rsids.all <- tbl.eQTL$rsid
> length(rsids.all)
[1] 5590
> head(tbl.eQTL)
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059  rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> dim(tbl.eQTL)
[1] 5590   10
> dim(subset(tbl.eQTL, pvalue < 0.005)) 
[1] 14 10
> tbl.eQTL[1:5,]
     chrom     hg19     hg38       rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504 rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440 rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880 rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549 rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714 rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> subset(tbl.eQTL, pvalue < 0.005)
     chrom     hg19     hg38        rsid      pvalue            ensg genesymbol      study tissue   assay
215   chr8 26577021 26719504  rs13278281 0.002834277 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1738  chr8 27505957 27648440  rs34547896 0.002906728 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
602   chr8 26551397 26693880  rs17330796 0.002954372 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
536   chr8 27767066 27909549  rs17058204 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
537   chr8 27767231 27909714  rs17058207 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
4095  chr8 27764576 27907059   rs7826640 0.003232990 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2795  chr8 27767276 27909759  rs58646328 0.003273450 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
1561  chr8 27769367 27911850  rs28588017 0.003322103 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2761  chr8 27771707 27914190  rs57755501 0.003465972 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
2959  chr8 27762021 27904504  rs62496800 0.003659214 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
380   chr8 26541519 26684002 rs150033119 0.003778593 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3548  chr8 26292753 26435237  rs73219814 0.004301373 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
3938  chr8 26294434 26436918  rs76970204 0.004370161 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
892   chr8 26571605 26714088   rs2028554 0.004583541 ENSG00000120899      PTK2B ampad-mayo    tcx unknown
> 
> direction <- "bottom"
> #direction <- "random"
> #direction <- "middle"
> #direction <- "top"
> 
> #rich.pvals.end <- nrow(subset(tbl.eQTL, pvalue <= 0.05))
> #rsids.oi <- rsids.all[1000:2000]
> #pval.threshold <- 0.005
> #rsids.oi <- subset(tbl.eQTL, pvalue <= pval.threshold)$rsid
> rsids.oi <- tail(tbl.eQTL$rsid, n=200)
> match(rsids.oi, tbl.eQTL$rsid)
  [1] 5391 5392 5393 5394 5395 5396 5397 5398 5399 5400 5401 5402 5403 5404 5405 5406 5407 5408 5409 5410 5411 5412 5413 5414 5415 5416 5417 5418 5419 5420 5421 5422 5423 5424 5425 5426 5427 5428 5429 5430 5431 5432 5433
 [44] 5434 5435 5436 5437 5438 5439 5440 5441 5442 5443 5444 5445 5446 5447 5448 5449 5450 5451 5452 5453 5454 5455 5456 5457 5458 5459 5460 5461 5462 5463 5464 5465 5466 5467 5468 5469 5470 5471 5472 5473 5474 5475 5476
 [87] 5477 5478 5479 5480 5481 5482 5483 5484 5485 5486 5487 5488 5489 5490 5491 5492 5493 5494 5495 5496 5497 5498 5499 5500 5501 5502 5503 5504 5505 5506 5507 5508 5509 5510 5511 5512 5513 5514 5515 5516 5517 5518 5519
[130] 5520 5521 5522 5523 5524 5525 5526 5527 5528 5529 5530 5531 5532 5533 5534 5535 5536 5537 5538 5539 5540 5541 5542 5543 5544 5545 5546 5547 5548 5549 5550 5551 5552 5553 5554 5555 5556 5557 5558 5559 5560 5561 5562
[173] 5563 5564 5565 5566 5567 5568 5569 5570 5571 5572 5573 5574 5575 5576 5577 5578 5579 5580 5581 5582 5583 5584 5585 5586 5587 5588 5589 5590
> 
> count <- length(rsids.oi)
> printf("found %d rsids", count)
[1] found 200 rsids
> 
> 
> 
> #rsids.midsig <- subset(tbl.eQTL, pvalue <= 0.55 & pvalue >= 0.50)$rsid
> #length(rsids.midsig)
> #rsids.midsig <- sample(rsids.midsig, size=40)
> 
> #snps.gr <- snps.from.rsid(rsid=rsids.oi,
> #snps.gr <- snps.from.rsid(rsid=rsids.sig,
> printf("--- getting snps")
[1] --- getting snps
> print(head(rsids.oi))
[1] "rs7012010"  "rs2322599"  "rs12542220" "rs4412379"  "rs67668729" "rs73567993"
> snps.gr <- snps.from.rsid(rsid=rsids.oi, 
+                           dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
+                           search.genome=BSgenome.Hsapiens.UCSC.hg38)
Warning message:
In rowids2rowidx(user_rowids, ids, x_rowids, ifnotfound) :
  SNP ids not found: rs77021861
  
  They were dropped.
> 
> printf("----- got snps: %d", length(snps.gr))
[1] ----- got snps: 243
> length(snps.gr)
[1] 243
> printf("----- get motifs")
[1] ----- get motifs
> 
> #motifs.selected <- get(load("motifs.50.80.pkt2b.RData"))
> #motifs.selected <- get(load("motifs.38tfs.60motifs.pkt2b.RData"))
> motifs.selected <- get(load("motifs.2tfs.3motifs.pkt2b.RData"))
> 
> length(motifs.selected)
[1] 3
> 
> worker.count <- min(length(rsids.oi), 40)
> printf("worker.count: %d", worker.count)
[1] worker.count: 40
> #param <- SnowParam(workers=worker.count, type = "SOCK")
> bpparam <- MulticoreParam(workers=worker.count)
> 
> 
> printf("----- running breakR")
[1] ----- running breakR
> results <- motifbreakR(snpList = snps.gr,
+                        filterp = TRUE,
+                        pwmList = motifs.selected,
+                        show.neutral=FALSE,
+                        method = c("ic", "log", "notrans")[1],
+                        bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
+                        BPPARAM = bpparam,
+                        verbose=TRUE)
reached end of SNPs list length = 243 with 305 potentially disruptive matches to 2 of 3 motifs.
> tbl.breaks <- as.data.frame(results, row.names=NULL)
> dim(tbl.breaks)
[1] 305  24
> tbl.breaks <- subset(tbl.breaks, effect=="strong")
> dim(tbl.breaks)
[1] 238  24
> tbl.breaks$pctDelta <- tbl.breaks$pctAlt - tbl.breaks$pctRef
> tbl.breaks$scoreDelta <- tbl.breaks$scoreAlt - tbl.breaks$scoreRef
> xtab.summary <- with(tbl.breaks, table(geneSymbol, SNP_id))
> tbl.summary <- as.data.frame.matrix(xtab.summary)
> print(colSums(tbl.summary))
 rs10097646  rs10098125  rs10100812  rs10102677  rs10110905  rs10112625  rs10503802   rs1058332   rs1111619  rs11135954  rs11135963  rs11135965  rs11136022 rs117300211 rs117703276  rs11778244  rs11987886  rs11993843 
          3           6           3           1           1           1           1           1           1           1           1           1           3           2           1           1           1           2 
 rs12541165  rs12542148  rs12546017  rs12549537  rs12549968  rs12681850  rs13276415  rs13282907   rs1348823 rs146984372   rs1472346   rs1541875   rs1574864   rs1583092   rs1584233  rs17055695  rs17333700  rs17348914 
          1           1           3           3           3           2           2           1           1           2           3           3           2           1           1           1           3           2 
 rs17401856   rs1825137   rs1838877    rs184488   rs1867889   rs1879182   rs1879184   rs1879186    rs189023   rs1896959   rs2163176   rs2218568   rs2233699   rs2241657   rs2241658   rs2280375   rs2288617   rs2292976 
          1           2           1           2           5           1           1           2           2           1           2           1           1           4           2           1           2           3 
  rs2322379   rs2322394   rs2322588   rs2623463    rs327214    rs327235    rs327237    rs328095  rs34405107  rs35007796   rs3735758   rs3736523   rs3779636    rs382232   rs4091949   rs4416829   rs4437657   rs4448225 
          3           1           3           1           1           1           2           1           1           2           2           2           2           1           1           2           1           3 
  rs4496924   rs4518678   rs4732704   rs4732830   rs4732991   rs4733060   rs4733061   rs4733064    rs522881    rs538996    rs539239    rs545393  rs55638236  rs56280243  rs56307388  rs56394438  rs56409411  rs57585352 
          1           1           1           3           1           2           1           1           1           3           1           2           2           1           1           1           1           1 
 rs61008596  rs61386345  rs61660457  rs62502323  rs62504161   rs6557955   rs6557980   rs6557983   rs6557984   rs6557985  rs66505272   rs6984385   rs6992526   rs6993153   rs6996922   rs7003027   rs7006523   rs7012010 
          1           1           2           3           1           1           5           3           1           2           1           1           1           2           1           1           3           2 
  rs7017268  rs71519652    rs727813  rs73226148  rs73235356   rs7341664  rs73567993    rs735880  rs74600765    rs748282  rs76295831  rs77185818   rs7821500   rs7824151   rs7845324  rs78511981  rs79335762  rs80110910 
          1           2           5           1           3           1           2           2           1           2           2           3           3           1           1           1           1           3 
   rs891393    rs904054    rs919493    rs920695    rs920696    rs939269   rs9644122   rs9987372 
          1           1           3           1           2           3           1           4 
> 
> filename <- sprintf("ptk2b.eqtls.%s.%d.%s.motifbreaks.RData", direction, count,
+                     format(Sys.time(), "%d%b.%H%M"))
> save(results, tbl.breaks, tbl.summary, file=filename)
> 
> # 
> #  rsids.to.use <- rsids.all[sort(sample(seq_len(length(rsids)), size=3))]
> #  
> #  run.breaker <- function(snp.gr){
> #      printf("run.breaker on %s", paste(rsids, collapse= " "))
> #      results <- motifbreakR(snpList = snp.gr,
> #                             filterp = TRUE,
> #                             pwmList = motifs.selected,
> #                             show.neutral=FALSE,
> #                             method = c("ic", "log", "notrans")[1],
> #                             bkg = c(A=0.25, C=0.25, G=0.25, T=0.25),
> #                             verbose=TRUE)
> #      }
> #  
> #  direction <- "random"
> #  count <- 5
> #  if(direction == "top")
> #    rsids <- head(rsids.all, n=count)
> #  if(direction == "bottom")
> #    rsids <- tail(rsids.all, n=count)
> #  if(direction == "random")
> #    rsids <- rsids.all[sort(sample(seq_len(length(rsids.all)), size=count))]
> #  
> #  snps.gr <- snps.from.rsid(rsid=rsids,
> #                            dbSNP=SNPlocs.Hsapiens.dbSNP151.GRCh38,
> #                            search.genome=BSgenome.Hsapiens.UCSC.hg38)
> #  x <- bplapply(list(snps.gr[[1]], snps.gr[[2]]), run.breaker, BPParame=MulitcoreParam()))
> #  #x <- bplapply(rsids, run.breaker, BPParame=MulitcoreParam()))
> #  
> 
